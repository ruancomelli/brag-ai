name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: |
          Release version without the v prefix (e.g. 0.1.0).
          Can also be `major`, `minor`, or `patch`.
          If not provided, the next version will be automatically calculated.
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Set up UV
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: false

    - name: Get current version
      id: current-version
      uses: ./.github/actions/current-version

    - name: Calculate new version
      id: new-version
      run: |
        if [ -z "${{ github.event.inputs.version }}" ]; then
          echo "No version provided, using next version from git-cliff"
          version=${{ steps.current-version.outputs.next-version }}
        elif [ "${{ github.event.inputs.version }}" = "major" ]; then
          echo "Major version bump requested"
          version=${{ steps.current-version.outputs.next-major-version }}
        elif [ "${{ github.event.inputs.version }}" = "minor" ]; then
          echo "Minor version bump requested"
          version=${{ steps.current-version.outputs.next-minor-version }}
        elif [ "${{ github.event.inputs.version }}" = "patch" ]; then
          echo "Patch version bump requested"
          version=${{ steps.current-version.outputs.next-patch-version }}
        else
          echo "Using specific version: ${{ github.event.inputs.version }}"
          version=${{ github.event.inputs.version }}
        fi
        echo "version=$version" >> $GITHUB_OUTPUT

    - name: Update version in __init__.py
      run: |
        echo "Updating version to ${{ steps.new-version.outputs.version }}"
        sed -i 's/__version__ = ".*"/__version__ = "${{ steps.new-version.outputs.version }}"/' src/brag/__init__.py

    - name: Update changelog with new version
      uses: orhun/git-cliff-action@v4
      id: update-changelog
      with:
        config: .github/git-cliff-config.toml
        args: --tag v${{ steps.new-version.outputs.version }}
      env:
        OUTPUT: CHANGELOG.md

    - name: Generate release changelog
      uses: orhun/git-cliff-action@v4
      id: generate-release-changelog
      with:
        config: .github/git-cliff-config.toml
        args: -vv --latest

    - name: Commit version and changelog
      run: |
        git add src/brag/__init__.py
        git add CHANGELOG.md
        git commit -m "chore: release v${{ steps.new-version.outputs.version }}"

    - name: Push changes
      run: |
        git tag v${{ steps.new-version.outputs.version }}
        git push origin main
        git push origin v${{ steps.new-version.outputs.version }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.new-version.outputs.version }}
        name: v${{ steps.new-version.outputs.version }}
        body: ${{ steps.generate-release-changelog.outputs.content }}
        token: ${{ secrets.GITHUB_TOKEN }}
